# -*- coding: utf-8 -*-
"""Spam detection .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1D9lArZO8ynHdVzCe8biknC9-e65_M9JZ
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

df = pd.read_csv('mail_data.csv')

print(df)

data = df.where((pd.notnull(df)), '')

data.head()

data.info()

data.shape

data.loc[data["v1"] == 'spam', 'v1'] = 0
data.loc[data["v2"] == 'ham', 'v2'] = 1

X = data['v2']
Y = data['v1']

print(X)

print(Y)

X_train, X_test, Y_train, Y_test = train_test_split(X,Y,test_size=0.2, random_state = 3)

print(X.shape)
print(X_train.shape)
print(X_test.shape)

from sklearn.feature_extraction.text import TfidfVectorizer

feature_extraction = TfidfVectorizer(min_df=1, stop_words='english', lowercase=True)

X_train_features = feature_extraction.fit_transform(X_train)
X_test_features = feature_extraction.transform(X_test)

Y_train = Y_train.astype('str')
Y_test = Y_test.astype('str')

print(X_train_features)

model = LogisticRegression()

model.fit(X_train_features, Y_train)

prediction_on_training_data = model.predict(X_train_features)
accuracy_on_training_data = accuracy_score(Y_train, prediction_on_training_data)

print('acc on training data :', accuracy_on_training_data)

prediction_on_test_data = model.predict(X_test_features)
accuracy_on_test_data = accuracy_score(Y_test, prediction_on_test_data)

print('acc on test data :', accuracy_on_test_data)

input_your_mail = [""]#enter the mail you want to check whethe rit is spam or ham
input_data_features = feature_extraction.transform(input_your_mail)
prediction = model.predict(input_data_features)
print(prediction)

if prediction[0] == 'ham':
    print('Ham mail')
else:
    print('Spam mail')